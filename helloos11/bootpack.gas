	.file	"bootpack.c"
	.data
LC0:
	.ascii "counter\0"
LC1:
	.ascii "(%3d, %3d)\0"
LC2:
	.ascii "memory %dMB   free : %dKB\0"
LC3:
	.ascii "%010d\0"
LC5:
	.ascii "[lcr %4d %4d]\0"
LC4:
	.ascii "%02X\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$516, %esp
	movl	$0, -500(%ebp)
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-92(%ebp), %eax
	pushl	%eax
	pushl	$32
	pushl	$_keyfifo
	call	_fifo8_init
	leal	-220(%ebp), %eax
	pushl	%eax
	pushl	$128
	pushl	$_mousefifo
	call	_fifo8_init
	pushl	$249
	pushl	$33
	call	_io_out8
	addl	$32, %esp
	pushl	$239
	pushl	$161
	call	_io_out8
	call	_init_keyboard
	leal	-236(%ebp), %eax
	pushl	%eax
	call	_enable_mouse
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -496(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-496(%ebp), %eax
	addl	$36, %esp
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	call	_init_palette
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	movl	%eax, %ebx
	pushl	%eax
	call	_sheet_alloc
	addl	$32, %esp
	pushl	%ebx
	movl	%eax, -504(%ebp)
	call	_sheet_alloc
	pushl	%ebx
	leal	-492(%ebp), %ebx
	movl	%eax, -508(%ebp)
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -512(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$8320
	pushl	$3932160
	movl	%eax, -516(%ebp)
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, -520(%ebp)
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	pushl	-504(%ebp)
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$99
	pushl	$16
	pushl	$16
	pushl	%ebx
	pushl	-508(%ebp)
	call	_sheet_setbuf
	pushl	$-1
	pushl	$52
	pushl	$160
	pushl	-520(%ebp)
	pushl	-512(%ebp)
	call	_sheet_setbuf
	addl	$40, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_init_screen8
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	pushl	$LC0
	pushl	$52
	pushl	$160
	pushl	-520(%ebp)
	call	_make_window8
	addl	$36, %esp
	pushl	$0
	pushl	$0
	pushl	-504(%ebp)
	call	_sheet_slide
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, %esi
	movswl	4086,%eax
	leal	-44(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	%eax
	movl	%eax, %edi
	pushl	%esi
	leal	-60(%ebp), %ebx
	pushl	-508(%ebp)
	call	_sheet_slide
	pushl	$72
	pushl	$80
	pushl	-512(%ebp)
	call	_sheet_slide
	addl	$36, %esp
	pushl	$0
	pushl	-504(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-512(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-508(%ebp)
	call	_sheet_updown
	pushl	%edi
	pushl	%esi
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_putfonts8_asc
	pushl	$3932160
	call	_memman_total
	shrl	$20, -496(%ebp)
	shrl	$10, %eax
	movl	%eax, (%esp)
	pushl	-496(%ebp)
	pushl	$LC2
	pushl	%ebx
	call	_sprintf
	addl	$40, %esp
	pushl	%ebx
	pushl	$7
	pushl	$32
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_putfonts8_asc
	pushl	$48
	movswl	4084,%eax
	pushl	%eax
	pushl	$0
L18:
	pushl	$0
	pushl	-504(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
L2:
	incl	-500(%ebp)
	leal	-60(%ebp), %ebx
	pushl	-500(%ebp)
	pushl	$LC3
	pushl	%ebx
	call	_sprintf
	pushl	$43
	pushl	$119
	pushl	$28
	pushl	$40
	pushl	$8
	pushl	$160
	pushl	-520(%ebp)
	call	_boxfill8
	addl	$40, %esp
	pushl	%ebx
	pushl	$0
	pushl	$28
	pushl	$40
	pushl	$160
	pushl	-520(%ebp)
	call	_putfonts8_asc
	pushl	$44
	pushl	$120
	pushl	$28
	pushl	$40
	pushl	-512(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	call	_io_cli
	pushl	$_keyfifo
	call	_fifo8_status
	pushl	$_mousefifo
	movl	%eax, %ebx
	call	_fifo8_status
	leal	(%eax,%ebx), %eax
	popl	%ebx
	popl	%edx
	testl	%eax, %eax
	je	L19
	pushl	$_keyfifo
	call	_fifo8_status
	popl	%ecx
	testl	%eax, %eax
	jne	L20
	pushl	$_mousefifo
	call	_fifo8_status
	popl	%edx
	testl	%eax, %eax
	je	L2
	pushl	$_mousefifo
	call	_fifo8_get
	movl	%eax, %ebx
	call	_io_sti
	movzbl	%bl, %eax
	pushl	%eax
	leal	-236(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	addl	$12, %esp
	testl	%eax, %eax
	je	L2
	pushl	-228(%ebp)
	pushl	-232(%ebp)
	pushl	$LC5
	leal	-60(%ebp), %eax
	pushl	%eax
	call	_sprintf
	addl	$16, %esp
	movl	-224(%ebp), %eax
	testl	$1, %eax
	je	L11
	movb	$76, -59(%ebp)
L11:
	testl	$2, %eax
	je	L12
	movb	$82, -57(%ebp)
L12:
	andl	$4, %eax
	je	L13
	movb	$67, -58(%ebp)
L13:
	pushl	$31
	pushl	$151
	pushl	$16
	pushl	$32
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_boxfill8
	leal	-60(%ebp), %edx
	pushl	%edx
	pushl	$7
	pushl	$16
	pushl	$32
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_putfonts8_asc
	addl	$52, %esp
	pushl	$32
	pushl	$152
	pushl	$16
	pushl	$32
	pushl	-504(%ebp)
	call	_sheet_refresh
	addl	$20, %esp
	addl	-228(%ebp), %edi
	addl	-232(%ebp), %esi
	js	L21
L14:
	testl	%edi, %edi
	js	L22
L15:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, %esi
	jle	L16
	movl	%eax, %esi
L16:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, %edi
	jle	L17
	movl	%eax, %edi
L17:
	pushl	%edi
	leal	-60(%ebp), %ebx
	pushl	%esi
	pushl	$LC1
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	$79
	pushl	$0
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$0
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_putfonts8_asc
	pushl	$16
	pushl	$80
	pushl	$0
	pushl	$0
	pushl	-504(%ebp)
	call	_sheet_refresh
	addl	$44, %esp
	pushl	%edi
	pushl	%esi
	pushl	-508(%ebp)
	call	_sheet_slide
	addl	$12, %esp
	jmp	L2
L22:
	xorl	%edi, %edi
	jmp	L15
L21:
	xorl	%esi, %esi
	jmp	L14
L20:
	pushl	$_keyfifo
	call	_fifo8_get
	movl	%eax, %ebx
	call	_io_sti
	pushl	%ebx
	leal	-60(%ebp), %edx
	pushl	$LC4
	leal	-60(%ebp), %ebx
	pushl	%edx
	call	_sprintf
	pushl	$31
	pushl	$15
	pushl	$16
	pushl	$0
	pushl	$14
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_boxfill8
	addl	$44, %esp
	pushl	%ebx
	pushl	$7
	pushl	$16
	pushl	$0
	movswl	4084,%eax
	pushl	%eax
	pushl	-516(%ebp)
	call	_putfonts8_asc
	pushl	$32
	pushl	$16
	pushl	$16
	jmp	L18
L19:
	call	_io_sti
	jmp	L2
	.data
_closebtn.0:
	.ascii "OOOOOOOOOOOOOOO@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQQQ@@QQQQQ$@"
	.ascii "OQQQQQ@@@@QQQQ$@"
	.ascii "OQQQQ@@QQ@@QQQ$@"
	.ascii "OQQQ@@QQQQ@@QQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "OQQQQQQQQQQQQQ$@"
	.ascii "O$$$$$$$$$$$$$$@"
	.ascii "@@@@@@@@@@@@@@@@"
	.text
	.balign 2
.globl _make_window8
	.def	_make_window8;	.scl	2;	.type	32;	.endef
_make_window8:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	subl	$20, %esp
	movl	12(%ebp), %ebx
	pushl	$0
	leal	-1(%ebx), %eax
	leal	-2(%ebx), %edi
	pushl	%eax
	movl	%eax, -20(%ebp)
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	pushl	$1
	pushl	%edi
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %edx
	addl	$56, %esp
	decl	%edx
	movl	%edx, -24(%ebp)
	pushl	%edx
	pushl	$0
	pushl	$0
	pushl	$0
	pushl	$8
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %esi
	subl	$2, %esi
	pushl	%esi
	pushl	$1
	pushl	$1
	pushl	$1
	pushl	$7
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%esi
	pushl	%edi
	pushl	$1
	pushl	%edi
	pushl	$15
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	pushl	-24(%ebp)
	pushl	-20(%ebp)
	pushl	$0
	pushl	-20(%ebp)
	pushl	$0
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	movl	16(%ebp), %eax
	addl	$56, %esp
	subl	$3, %eax
	pushl	%eax
	leal	-3(%ebx), %eax
	pushl	%eax
	pushl	$2
	pushl	$2
	pushl	$8
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	leal	-4(%ebx), %eax
	pushl	$20
	pushl	%eax
	pushl	$3
	pushl	$3
	pushl	$12
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	%esi
	pushl	%edi
	pushl	%esi
	pushl	$1
	pushl	$15
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	pushl	-24(%ebp)
	pushl	-20(%ebp)
	pushl	-24(%ebp)
	pushl	$0
	pushl	$0
	imull	$5, %ebx, %esi
	pushl	%ebx
	pushl	8(%ebp)
	call	_boxfill8
	addl	$56, %esp
	pushl	20(%ebp)
	pushl	$7
	pushl	$4
	pushl	$24
	pushl	%ebx
	pushl	8(%ebp)
	call	_putfonts8_asc
	addl	$24, %esp
	movl	$0, -16(%ebp)
	movl	$0, -32(%ebp)
L39:
	leal	(%esi,%ebx), %eax
	movl	8(%ebp), %edx
	xorl	%edi, %edi
	leal	-21(%edx,%eax), %ecx
L38:
	movl	-32(%ebp), %eax
	movb	_closebtn.0(%edi,%eax), %dl
	cmpb	$64, %dl
	je	L44
	cmpb	$36, %dl
	je	L45
	cmpb	$81, %dl
	movb	$8, %dl
	setne	%al
	subb	%al, %dl
L33:
	incl	%edi
	movb	%dl, (%ecx)
	incl	%ecx
	cmpl	$15, %edi
	jle	L38
	incl	-16(%ebp)
	addl	%ebx, %esi
	addl	$16, -32(%ebp)
	cmpl	$13, -16(%ebp)
	jle	L39
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
L45:
	movb	$15, %dl
	jmp	L33
L44:
	xorl	%edx, %edx
	jmp	L33
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_fifo8_get;	.scl	2;	.type	32;	.endef
	.def	_fifo8_status;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_boxfill8;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_memman_total;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_init_palette;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_fifo8_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
