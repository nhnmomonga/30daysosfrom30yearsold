[目次]

1.dsar編
2.esart5編
3.そのほか編

[1.dsar編]

  dsarはsarファイルの展開を簡単にするためのバッチファイルです。「でさー」
か「どさー」とでも呼んでください。

  dsarはsartolを呼び出すバッチファイルで、あっきぃさんの「えんやこらsar」
のバッチファイル版とでもいうべきものです。しかししょせんはバッチファイル
なので、「えんやこらsar」には多くの点で劣っています。ということで、基本的
には「えんやこらsar」のほうを強くお勧めします。「えんやこらsar」をなくして
しまったときや、CUIが好きでたまらないという人だけ、dsarを使ってください。
「えんやこらsar」はGUIで設定できるのでずっと便利です。

        http://koya.marokun.net/osask/download.html

---

  デフォルトでは、sartol.exeにパスが通っていて、かつ、Windows2000上で
利用し、展開先はデスクトップ上に作ったフォルダ、さらに展開終了後は、
そのフォルダをexplorerで自動的に開く、という設定内容になっています。

  Win95/98で使う場合やsartol.exeの置き場所が違うときは、バッチファイル
の最初のsetのところを適当に書き換えてください。

  dsar_bpathの末尾に/があると、アーカイブと同じ名前のディレクトリを
自動生成します。/がなければ、ディレクトリを作らずに、指定されたディレク
トリに、じかにアーカイブの中身を展開します。dsar_bpathを ..@arcpath
もしくは ..@arcpath/ とすると、 ..@arcpath の部分にsarファイルのある
パスが置き換えられて処理されます。

  dsar_bpathの記述には、今は存在していないディレクトリが複数含まれてい
てもかまいません。ちゃんと設定どおりのパスになるように、sartol側で足り
ないディレクトリを自動生成します。

  dsar_autorunは=の後ろに何も書かないと、ディレクトリの自動オープンを
しなくなります。dsar_autorunはおもにexplorerを指定するために用意されて
いますが、展開したディレクトリをそのまま別のアーカイバに渡すとかもでき
るでしょう。これにより、sar→zip変換とか、そういうこともできるんじゃな
いかと思っています。

---

  使い方は

prompt>dsar osat46i.sar

などとします。

  もしくは、エクスプローラでosat46i.sarをつかんで、dsar.batの上に落とし
てもいいです。

  もしくは、いきなりosat46i.sarをダブルクリックして「ファイルを開く
アプリケーションの選択」ウィンドウを出させて、「その他」ボタンを押して
dsar.batを選び、「これらのファイルを開くときは、いつもこのアプリケー
ションを使う」にチェックをつけたままでOKを押す方法もあります。これなら
以後はダブルクリックだけでどんどん展開できます。LHASA気分です。

  以上の3つのいずれでも、複数のファイルの指定が可能です。

[2.esart5編]

  esart5はsarのアーカイブ作成オプションが長くて面倒なので、とりあえず
手軽にアーカイブを作れるようにしたバッチファイルです。自動でtek5圧縮も
かけます。

・簡単な使い方

prompt>esart5 適当なディレクトリ名

などとします。

  もしくは、エクスプローラで適当なディレクトリをつかんで、esart5.batの
上に落としてもいいです。

  これで、ディレクトリの内容と同じものがsarファイルとなって生成されま
す。どこに生成されるのかというと、とりあえずそのディレクトリと同じ場所
にできます。もちろん、ディレクトリの中にディレクトリがあれば、それも全
部sarにしまいこまれます。

  どちらについても、複数のディレクトリを一度に指定してはいけません。

・ちょっとだけ高度な使い方

prompt>esart5 適当なディレクトリ名 **
→こうすると、下位ディレクトリのファイルはアーカイブしなくできます。

prompt>esart5 適当なディレクトリ名 *.txt
→こうすると、全てのディレクトリの中から拡張子が.txtのものだけをアーカ
  イブ対象にします。

prompt>esart5 適当なディレクトリ名 **.txt
→こうすると、指定したディレクトリの中から拡張子が.txtのものだけをアー
  カイブ対象にします。下位ディレクトリの中は捜しません。

prompt>esart5 適当なディレクトリ名 abc*
→こうすると、アーカイブ対象パスがabcで始まるものだけをsarに入れます。

prompt>esart5 適当なディレクトリ名 *.txt *.doc
→こうすると、.txtと.docがアーカイブ対象です。

prompt>esart5 適当なディレクトリ名 sartol.c sartol.exe
→こうすると、sartol.cとsartol.exeだけがアーカイブ対象です。

prompt>esart5 適当なディレクトリ名 src/*
→こうすると、srcディレクトリの中だけアーカイブします。

  なお、esart5などを使わずにsartolやwceを直接利用すれば、もっと複雑な
指定も可能です。

[3.そのほか編]

  wce.exeは、ワイルドカード展開支援アプリです。とりあえずWindows用で、
Linuxなどで利用するにはsetnames()あたりを大幅にいじる必要があるでしょ
う。というか、Linuxではシェルがワイルドカード展開をしてくれているので
こんな小細工アプリは不要でもあります。

  手抜きで作っているために、たくさんのサブディレクトリをもつディレクト
リで実行すると、下の階層を参照するようなワイルドカードを使っていなくて
も、劇的に実行速度が落ちます。

  ということで、その辺に注意して問題なさそうなディレクトリで、とりあえ
ず、

prompt>wce echo *

などといれてみてください。ワイルドカードにマッチしたファイル名がechoさ
れるはずです。

  生成しているコマンドラインを確認したいときは、

prompt>wce echo * #p=1

というふうに、末尾に「#p=1」を付けてください。system()を呼ばすにputs()
するようになります。

prompt>wce echo #b=適当なディレクトリ名 *.txt

とすると、カレントディレクトリではなく指定したディレクトリ内に対して、
ワイルドカードを適用します。

prompt>wce echo ( *.txt *.doc )

と括弧をつけると（括弧の前後にはスペースが必要）、括弧をつけない場合は
ファイル名のソートがワイルドカード単位になっていたところが、括弧内全体
でソートするようになります。

prompt>wce echo ( *.txt #!=readme.txt )

このように「#!=ファイル名」とすると、そのファイル名は出力されません。
括弧がないと*.txtの段階で出力されてしまうため、括弧は必要です。

  なお完成度が低いので、?は全く使えません。

  wceではワイルドカードを含まない文字列はそのまま出力されます。括弧が
ある場合はいったんバッファリングして、ソートしてから出力です。

例>wce echo abc def 0123
例>wce echo ( abc def 0123 )

  wceはアルファベットの大文字小文字を区別します。memo.txtは*.TXTでは
ヒットしません。それが困るときは ( *.txt *.TXT ) とでもしてください。

[さいごに]

  dsarやsartolやwceの著作権は川合秀実にあり、ライセンスはKL-01です。
